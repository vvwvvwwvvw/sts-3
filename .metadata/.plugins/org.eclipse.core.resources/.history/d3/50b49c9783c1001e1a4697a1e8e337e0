Spring Legacy Project
1. pom.xml 변경 (각정 라이브러리 버전)
	java:11
	springframework-version :1.9.6
	slf4j-version : 2.0.9
	servlet-api -> javax.servlet-api(artifactId)
									version: 3.1.0
	maven-compiler-plugin configuration : 3.8.1
		source :11
		target : 11
		
		
2. Projecties 변경
	Project Facets
		-Dynamic Web Module :4.0
		-java:11
		Runtime : Apache Tomcat 체크
		
3. 한글인코딩

<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
Lombok 설치

1. lombok 다운로드 후 실행하여 개발도구에 설치
2. maven repository에서 해당 라이브러리를 복사하여 pom.xml에 추가


	lombok 활용
	1) getter 와 setter 자동생성
	2) log 출력용 라이브러리 - Slf4j(Log)
	
mvc 패턴
1. controller (요청에 따른 기능의 분류)
2. service	( 요청에 해당하는 기능을 제공)
3. dao	(Data Access Object, DB와 CRUD를 처리)
4. dto	(Data Transfer Object, data 를 담아서 옮기는 역할을 담당)
	vo (Value Object)
	entity(DB 테이블과 매핑하여 사용하는 객체)
	
JSP (java Server Page)
 	JSP= HTML + Java
 	페이지의 java 코드가 컴파일 되어 하나의 클래스 로 변환되어 실행
 	이 클래스를 servlet 클래스라고 함.
 	
 JSP 핵심요소
 1. Directive (지시자)
 	JSP 페이지에 대한 설정 정보를 지정할 떄 사용.
 	1)page	: 문서의 타입(인코딩방식), 에러페이지 지정등 
 	2)taglib - jstl과 같은 태가 라이브러리를 지정할떄 사용
 	3)include : 여러 페이지를 묶어서 하나의 페이지로 작성할 때
 				다른 페이지를 포함시키기 위한 지시자.
 	
 EL (Expression Language)
 	
 JSPL (Jsp Standard Tag Library)
 
 
 
 기본 객체
 request , response , session (cookie)
 	